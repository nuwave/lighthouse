parameters:
  level: 8 # TODO level up to max
  bootstrapFiles:
  - phpstan-bootstrap.php
  stubFiles:
  - _ide_helper.php
  paths:
  - benchmarks
  - src
  - tests
  # Does not work with rector, comment in to diagnose potential issues with Octane
  #checkOctaneCompatibility: true
  reportUnmatchedIgnoredErrors: false # As long as we support multiple Laravel versions at once, there will be some dead spots
  # Install https://plugins.jetbrains.com/plugin/7677-awesome-console to make those links clickable
  editorUrl: '%%relFile%%:%%line%%'
  editorUrlTitle: '%%relFile%%:%%line%%'
  tmpDir: phpstan-tmp-dir
  excludePaths:
  - tests/Utils/Models/WithoutRelationClassImport.php # Intentionally wrong
  - tests/LaravelPhpdocAlignmentFixer.php # Copied from laravel/pint
  # laravel/pennant requires Laravel 10
  - src/Pennant
  - tests/Integration/Pennant
  - src/Tracing/FederatedTracing/Proto # Generated classes from protobuf
  # Ignore errors caused by the absence of Lumen in the dev dependencies
  - tests/Unit/Testing/TestingTraitDummyLumen.php
  # Native enums
  - tests/Utils/Enums/ImageableType.php
  - tests/Utils/Enums/ImageableType.php
  ignoreErrors:
  # PHPStan does not get it
  - '#Parameter \#1 \$callback of static method Closure::fromCallable\(\) expects callable\(\): mixed, array{object, .*} given\.#'

  # Some parts of Laravel are just really magical
  - '#Parameter \#1 \$response of static method Nuwave\\Lighthouse\\Testing\\TestResponseUtils::extractValidationErrors\(\) expects Illuminate\\Testing\\TestResponse<Symfony\\Component\\HttpFoundation\\Response>, \$this\(Nuwave\\Lighthouse\\Testing\\TestResponseMixin\) given\.#'
  - path: tests/database/factories
    message: '#Variable \$factory might not be defined#'

  # Mixins magically rebind $this to be something else and do other funky stuff
  - path: src/Testing/TestResponseMixin.php
    message: '#Method Nuwave\\Lighthouse\\Testing\\TestResponseMixin::assertGraphQLErrorMessage\(\) invoked with 1 parameter, 0 required\.#'
  - path: src/Testing/TestResponseMixin.php
    message: '#Method Nuwave\\Lighthouse\\Testing\\TestResponseMixin::assertGraphQLDebugMessage\(\) invoked with 1 parameter, 0 required\.#'
  - path: src/Testing/TestResponseMixin.php
    message: '#Anonymous function should return Illuminate\\Testing\\TestResponse but returns .*#'

  # Recognition of mixin methods is broken in some PHPStan/Larastan versions
  - '#Call to an undefined method Illuminate\\Testing\\TestResponse::(assertGraphQLValidationError|assertGraphQLValidationKeys|assertGraphQLValidationPasses|assertGraphQLError|assertGraphQLErrorMessage|assertGraphQLDebugMessage|assertGraphQLErrorFree|assertGraphQLSubscriptionAuthorized|assertGraphQLSubscriptionNotAuthorized|graphQLSubscriptionMock|graphQLSubscriptionChannelName|assertGraphQLBroadcasted|assertGraphQLNotBroadcasted)\(\)\.#'

  # Relation forwards calls to Builder
  - '#Call to an undefined method Illuminate\\Database\\Eloquent\\Builder<Illuminate\\Database\\Eloquent\\Model>|Illuminate\\Database\\Eloquent\\Relations\\Relation<Illuminate\\Database\\Eloquent\\Model>|Illuminate\\Database\\Query\\Builder::(orderBy|where|whereIn|whereNotIn|whereBetween|whereJsonContains|whereNotBetween)\(\)\.#'

  # Laravel 11 changes a lot of generics
  - '#generic class (Illuminate\\Database\\Eloquent\\Builder|Laravel\\Scout\\Builder)( but)? does not specify its types#'
  - '#contains generic type Illuminate\\Testing\\TestResponse<.+> but class Illuminate\\Testing\\TestResponse is not generic\.#'
  - '#Generic type Illuminate\\.+ specifies \d template types, but (class|interface) Illuminate\\.+ supports only \d: .+#'
  - '#Method .+ should return Illuminate\\Database\\Eloquent\\Relations\\(HasOne|HasMany|BelongsToMany|MorphOne|MorphMany|MorphToMany)<(.+), .+> but returns Illuminate\\Database\\Eloquent\\Relations\\\1<\2>.#'
  - '#Method .+ should return Illuminate\\Database\\Eloquent\\Relations\\(BelongsTo|MorphTo)<(.+), \$this\((.+)\)> but returns Illuminate\\Database\\Eloquent\\Relations\\\1<\2, \3>.#'
  - '#Method .+ should return Illuminate\\Database\\Eloquent\\Relations\\(HasOneThrough|HasManyThrough)<(.+), .+> but returns Illuminate\\Database\\Eloquent\\Relations\\\1<\2>.#'
  - '#Return type of call to method Illuminate\\Database\\Eloquent\\Relations\\BelongsToMany<.+>::save\(\) contains unresolvable type\.#'

  # Different between PHPUnit versions
  - '#PHPDoc tag @return contains generic type PHPUnit\\Framework\\MockObject\\Builder\\InvocationMocker<stdClass> but class PHPUnit\\Framework\\MockObject\\Builder\\InvocationMocker is not generic.#'

  # This test cheats and uses reflection to make assertions
  - path: tests/Unit/Schema/Directives/BaseDirectiveTest.php
    message: '#Call to protected method getModelClass\(\) of class Nuwave\\Lighthouse\\Schema\\Directives\\BaseDirective\.#'

  # This is a library, so it should be extendable
  - '#Unsafe usage of new static.*#'

  # Possible footgun, but people who extend Lighthouse classes should know what they are doing
  - '#Cannot unset property .+ because it might have hooks in a subclass\.#'

  # Ease transition for non-nullable properties towards native types https://github.com/phpstan/phpstan/issues/5150
  - '#Property .* in isset\(\) is not nullable\.#'

  # Unavailable in thecodingmachine/safe:1
  - '#Function (hrtime) is unsafe to use\. It can return FALSE instead of throwing an exception\.#'

  # Unavailable in thecodingmachine/safe:2
  - '#Function (sort|substr|ksort) is unsafe to use\. It can return FALSE instead of throwing an exception\.#'

  # Lumen type hints are just wrong
  - '#Parameter \#1 \$content of function response expects string, .* given\.#'

  # Seems like a bug in PHPStan
  - '#Parameter \#2 \$type of method Nuwave\\Lighthouse\\Schema\\TypeRegistry::.+Lazy\(\) expects callable\(\): GraphQL\\Type\\Definition\\Type&GraphQL\\Type\\Definition\\NamedType, Closure\(\): GraphQL\\Type\\Definition\\ObjectType given\.#'

  # Older versions of bensampo/laravel-enum are not generic yet
  - '#contains generic type BenSampo\\Enum\\Enum<.+> but class BenSampo\\Enum\\Enum is not generic\.#'

  # Ignore errors caused by the absence of Lumen in the dev dependencies
  - path: src/Support/AppVersion.php
    message: '#PHPDoc tag @var for variable \$container contains unknown class Laravel\\Lumen\\Application.#'
  - path: src/Support/AppVersion.php
    message: '#Call to method version\(\) on an unknown class Laravel\\Lumen\\Application.#'
  - path: src/Subscriptions/SubscriptionRouter.php
    messages:
      - '#Parameter \$router of method Nuwave\\Lighthouse\\Subscriptions\\SubscriptionRouter::.+\(\) has invalid type Laravel\\Lumen\\Routing\\Router\.#'
      - '#Call to method post\(\) on an unknown class Laravel\\Lumen\\Routing\\Router\.#'
  - path: src/Http/routes.php
    messages:
      - '#PHPDoc tag @var for variable \$router contains unknown class Laravel\\Lumen\\Routing\\Router\.#'
      - '#Call to method addRoute\(\) on an unknown class Laravel\\Lumen\\Routing\\Router\.#'

  # Recent Mockery versions do not account for the last arg possibly being a closure
  - path: tests/Unit/Subscriptions/Iterators/AuthenticatingSyncIteratorTest.php
    message: '#Parameter \#2 \.\.\.\$args of static method Mockery::mock\(\) expects array\|class-string<Nuwave\\Lighthouse\\Subscriptions\\SubscriptionGuard>\|Nuwave\\Lighthouse\\Subscriptions\\SubscriptionGuard, Closure given\.#'

  - path: tests/Integration/Schema/Directives/BuilderDirectiveTest.php
    message: '#Return type of call to static method Mockery::mock\(\) contains unresolvable type\.#'

  # Laravel added generics to Arr::first in 11.x, not sure how to handle them for now.
  - path: src/OrderBy/OrderByDirective.php
    message: '#Unable to resolve the template type TValue in call to method static method Illuminate\\Support\\Arr::first\(\)#'
  - path: src/Testing/TestResponseMixin.php
    message: '#Unable to resolve the template type TValue in call to method static method Illuminate\\Support\\Arr::first\(\)#'

  # Lots of work to specify the generics, little gain
  - path: tests
    message: '#Method .+ return type with generic class Illuminate\\Testing\\TestResponse does not specify its types: TResponse#'

  # We don't care about configuration caching in our tests
  - path: tests
    message: '#^Called ''env'' outside of the config directory which returns null when the config is cached, use ''config''\.$#'
  # This is actually a config file, just not recognized as such
  - path: src/lighthouse.php
    message: '#^Called ''env'' outside of the config directory which returns null when the config is cached, use ''config''\.$#'

  # Allows assert() calls to assist IDE autocompletion
  - message: '#Call to function assert\(\) with true will always evaluate to true\.#'

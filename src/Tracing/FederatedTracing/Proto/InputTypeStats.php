<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: src/Tracing/FederatedTracing/reports.proto

namespace Nuwave\Lighthouse\Tracing\FederatedTracing\Proto;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>InputTypeStats</code>
 */
class InputTypeStats extends \Google\Protobuf\Internal\Message
{
    /**
     * Map of input object type to the stats about the fields within that object.
     *
     * Generated from protobuf field <code>map<string, .InputFieldStats> field_names = 1 [json_name = "fieldNames"];</code>
     */
    private $field_names;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type array|\Google\Protobuf\Internal\MapField $field_names
     *           Map of input object type to the stats about the fields within that object.
     * }
     */
    public function __construct($data = NULL) {
        \Nuwave\Lighthouse\Tracing\FederatedTracing\Proto\Metadata\Reports::initOnce();
        parent::__construct($data);
    }

    /**
     * Map of input object type to the stats about the fields within that object.
     *
     * Generated from protobuf field <code>map<string, .InputFieldStats> field_names = 1 [json_name = "fieldNames"];</code>
     * @return \Google\Protobuf\Internal\MapField
     */
    public function getFieldNames()
    {
        return $this->field_names;
    }

    /**
     * Map of input object type to the stats about the fields within that object.
     *
     * Generated from protobuf field <code>map<string, .InputFieldStats> field_names = 1 [json_name = "fieldNames"];</code>
     * @param array|\Google\Protobuf\Internal\MapField $var
     * @return $this
     */
    public function setFieldNames($var)
    {
        $arr = GPBUtil::checkMapField($var, \Google\Protobuf\Internal\GPBType::STRING, \Google\Protobuf\Internal\GPBType::MESSAGE, \Nuwave\Lighthouse\Tracing\FederatedTracing\Proto\InputFieldStats::class);
        $this->field_names = $arr;

        return $this;
    }

}


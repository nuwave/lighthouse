<?php declare(strict_types=1);
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: src/Tracing/FederatedTracing/reports.proto

namespace Nuwave\Lighthouse\Tracing\FederatedTracing\Proto\Trace\HTTP;

/**
 * Protobuf type <code>Trace.HTTP.Method</code>.
 */
class Method
{
    /** Generated from protobuf enum <code>UNKNOWN = 0;</code> */
    public const UNKNOWN = 0;
    /** Generated from protobuf enum <code>OPTIONS = 1;</code> */
    public const OPTIONS = 1;
    /** Generated from protobuf enum <code>GET = 2;</code> */
    public const GET = 2;
    /** Generated from protobuf enum <code>HEAD = 3;</code> */
    public const HEAD = 3;
    /** Generated from protobuf enum <code>POST = 4;</code> */
    public const POST = 4;
    /** Generated from protobuf enum <code>PUT = 5;</code> */
    public const PUT = 5;
    /** Generated from protobuf enum <code>DELETE = 6;</code> */
    public const DELETE = 6;
    /** Generated from protobuf enum <code>TRACE = 7;</code> */
    public const TRACE = 7;
    /** Generated from protobuf enum <code>CONNECT = 8;</code> */
    public const CONNECT = 8;
    /** Generated from protobuf enum <code>PATCH = 9;</code> */
    public const PATCH = 9;

    private static $valueToName = [
        self::UNKNOWN => 'UNKNOWN',
        self::OPTIONS => 'OPTIONS',
        self::GET => 'GET',
        self::HEAD => 'HEAD',
        self::POST => 'POST',
        self::PUT => 'PUT',
        self::DELETE => 'DELETE',
        self::TRACE => 'TRACE',
        self::CONNECT => 'CONNECT',
        self::PATCH => 'PATCH',
    ];

    public static function name($value)
    {
        if (! isset(self::$valueToName[$value])) {
            throw new \UnexpectedValueException(sprintf(
                'Enum %s has no name defined for value %s',
                __CLASS__,
                $value,
            ));
        }

        return self::$valueToName[$value];
    }

    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (! defined($const)) {
            throw new \UnexpectedValueException(sprintf(
                'Enum %s has no value defined for name %s',
                __CLASS__,
                $name,
            ));
        }

        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Method::class, \Nuwave\Lighthouse\Tracing\FederatedTracing\Proto\Trace_HTTP_Method::class);

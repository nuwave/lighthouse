<?php declare(strict_types=1);
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: src/Tracing/FederatedTracing/reports.proto

namespace Nuwave\Lighthouse\Tracing\FederatedTracing\Proto\Trace;

use Google\Protobuf\Internal\GPBUtil;

/**
 * We store information on each resolver execution as a Node on a tree.
 * The structure of the tree corresponds to the structure of the GraphQL
 * response; it does not indicate the order in which resolvers were
 * invoked.  Note that nodes representing indexes (and the root node)
 * don't contain all Node fields (eg types and times).
 *
 * Generated from protobuf message <code>Trace.Node</code>
 */
class Node extends \Google\Protobuf\Internal\Message
{
    /** Generated from protobuf field <code>string original_field_name = 14 [json_name = "originalFieldName"];</code> */
    protected $original_field_name = '';

    /**
     * The field's return type; e.g. "String!" for User.email:String!
     *
     * Generated from protobuf field <code>string type = 3 [json_name = "type"];</code>
     */
    protected $type = '';

    /**
     * The field's parent type; e.g. "User" for User.email:String!
     *
     * Generated from protobuf field <code>string parent_type = 13 [json_name = "parentType"];</code>
     */
    protected $parent_type = '';

    /** Generated from protobuf field <code>.Trace.CachePolicy cache_policy = 5 [json_name = "cachePolicy"];</code> */
    protected $cache_policy;

    /**
     * relative to the trace's start_time, in ns.
     *
     * Generated from protobuf field <code>uint64 start_time = 8 [json_name = "startTime"];</code>
     */
    protected $start_time = 0;

    /**
     * relative to the trace's start_time, in ns.
     *
     * Generated from protobuf field <code>uint64 end_time = 9 [json_name = "endTime"];</code>
     */
    protected $end_time = 0;

    /** Generated from protobuf field <code>repeated .Trace.Error error = 11 [json_name = "error"];</code> */
    private $error;

    /** Generated from protobuf field <code>repeated .Trace.Node child = 12 [json_name = "child"];</code> */
    private $child;

    protected $id;

    /**
     * Constructor.
     *
     * @param  array  $data {
     *     Optional. Data for populating the Message object.
     *
     *     @var string $response_name
     *     @var int $index
     *     @var string $original_field_name
     *     @var string $type
     *           The field's return type; e.g. "String!" for User.email:String!
     *     @var string $parent_type
     *           The field's parent type; e.g. "User" for User.email:String!
     *     @var \Nuwave\Lighthouse\Tracing\FederatedTracing\Proto\Trace\CachePolicy $cache_policy
     *     @var int|string $start_time
     *           relative to the trace's start_time, in ns
     *     @var int|string $end_time
     *           relative to the trace's start_time, in ns
     *     @var array<\Nuwave\Lighthouse\Tracing\FederatedTracing\Proto\Trace\Error>|\Google\Protobuf\Internal\RepeatedField $error
     *     @var array<\Nuwave\Lighthouse\Tracing\FederatedTracing\Proto\Trace\Node>|\Google\Protobuf\Internal\RepeatedField $child
     * }
     */
    public function __construct($data = null)
    {
        \Nuwave\Lighthouse\Tracing\FederatedTracing\Proto\Metadata\Reports::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>string response_name = 1 [json_name = "responseName"];</code>.
     *
     * @return string
     */
    public function getResponseName()
    {
        return $this->readOneof(1);
    }

    public function hasResponseName()
    {
        return $this->hasOneof(1);
    }

    /**
     * Generated from protobuf field <code>string response_name = 1 [json_name = "responseName"];</code>.
     *
     * @param  string  $var
     *
     * @return $this
     */
    public function setResponseName($var)
    {
        GPBUtil::checkString($var, true);
        $this->writeOneof(1, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>uint32 index = 2 [json_name = "index"];</code>.
     *
     * @return int
     */
    public function getIndex()
    {
        return $this->readOneof(2);
    }

    public function hasIndex()
    {
        return $this->hasOneof(2);
    }

    /**
     * Generated from protobuf field <code>uint32 index = 2 [json_name = "index"];</code>.
     *
     * @param  int  $var
     *
     * @return $this
     */
    public function setIndex($var)
    {
        GPBUtil::checkUint32($var);
        $this->writeOneof(2, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>string original_field_name = 14 [json_name = "originalFieldName"];</code>.
     *
     * @return string
     */
    public function getOriginalFieldName()
    {
        return $this->original_field_name;
    }

    /**
     * Generated from protobuf field <code>string original_field_name = 14 [json_name = "originalFieldName"];</code>.
     *
     * @param  string  $var
     *
     * @return $this
     */
    public function setOriginalFieldName($var)
    {
        GPBUtil::checkString($var, true);
        $this->original_field_name = $var;

        return $this;
    }

    /**
     * The field's return type; e.g. "String!" for User.email:String!
     *
     * Generated from protobuf field <code>string type = 3 [json_name = "type"];</code>
     *
     * @return string
     */
    public function getType()
    {
        return $this->type;
    }

    /**
     * The field's return type; e.g. "String!" for User.email:String!
     *
     * Generated from protobuf field <code>string type = 3 [json_name = "type"];</code>
     *
     * @param  string  $var
     *
     * @return $this
     */
    public function setType($var)
    {
        GPBUtil::checkString($var, true);
        $this->type = $var;

        return $this;
    }

    /**
     * The field's parent type; e.g. "User" for User.email:String!
     *
     * Generated from protobuf field <code>string parent_type = 13 [json_name = "parentType"];</code>
     *
     * @return string
     */
    public function getParentType()
    {
        return $this->parent_type;
    }

    /**
     * The field's parent type; e.g. "User" for User.email:String!
     *
     * Generated from protobuf field <code>string parent_type = 13 [json_name = "parentType"];</code>
     *
     * @param  string  $var
     *
     * @return $this
     */
    public function setParentType($var)
    {
        GPBUtil::checkString($var, true);
        $this->parent_type = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.Trace.CachePolicy cache_policy = 5 [json_name = "cachePolicy"];</code>.
     *
     * @return \Nuwave\Lighthouse\Tracing\FederatedTracing\Proto\Trace\CachePolicy|null
     */
    public function getCachePolicy()
    {
        return $this->cache_policy;
    }

    public function hasCachePolicy()
    {
        return isset($this->cache_policy);
    }

    public function clearCachePolicy()
    {
        unset($this->cache_policy);
    }

    /**
     * Generated from protobuf field <code>.Trace.CachePolicy cache_policy = 5 [json_name = "cachePolicy"];</code>.
     *
     * @param  \Nuwave\Lighthouse\Tracing\FederatedTracing\Proto\Trace\CachePolicy  $var
     *
     * @return $this
     */
    public function setCachePolicy($var)
    {
        GPBUtil::checkMessage($var, \Nuwave\Lighthouse\Tracing\FederatedTracing\Proto\Trace\CachePolicy::class);
        $this->cache_policy = $var;

        return $this;
    }

    /**
     * relative to the trace's start_time, in ns.
     *
     * Generated from protobuf field <code>uint64 start_time = 8 [json_name = "startTime"];</code>
     *
     * @return int|string
     */
    public function getStartTime()
    {
        return $this->start_time;
    }

    /**
     * relative to the trace's start_time, in ns.
     *
     * Generated from protobuf field <code>uint64 start_time = 8 [json_name = "startTime"];</code>
     *
     * @param  int|string  $var
     *
     * @return $this
     */
    public function setStartTime($var)
    {
        GPBUtil::checkUint64($var);
        $this->start_time = $var;

        return $this;
    }

    /**
     * relative to the trace's start_time, in ns.
     *
     * Generated from protobuf field <code>uint64 end_time = 9 [json_name = "endTime"];</code>
     *
     * @return int|string
     */
    public function getEndTime()
    {
        return $this->end_time;
    }

    /**
     * relative to the trace's start_time, in ns.
     *
     * Generated from protobuf field <code>uint64 end_time = 9 [json_name = "endTime"];</code>
     *
     * @param  int|string  $var
     *
     * @return $this
     */
    public function setEndTime($var)
    {
        GPBUtil::checkUint64($var);
        $this->end_time = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>repeated .Trace.Error error = 11 [json_name = "error"];</code>.
     *
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getError()
    {
        return $this->error;
    }

    /**
     * Generated from protobuf field <code>repeated .Trace.Error error = 11 [json_name = "error"];</code>.
     *
     * @param  array<\Nuwave\Lighthouse\Tracing\FederatedTracing\Proto\Trace\Error>|\Google\Protobuf\Internal\RepeatedField  $var
     *
     * @return $this
     */
    public function setError($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Nuwave\Lighthouse\Tracing\FederatedTracing\Proto\Trace\Error::class);
        $this->error = $arr;

        return $this;
    }

    /**
     * Generated from protobuf field <code>repeated .Trace.Node child = 12 [json_name = "child"];</code>.
     *
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getChild()
    {
        return $this->child;
    }

    /**
     * Generated from protobuf field <code>repeated .Trace.Node child = 12 [json_name = "child"];</code>.
     *
     * @param  array<\Nuwave\Lighthouse\Tracing\FederatedTracing\Proto\Trace\Node>|\Google\Protobuf\Internal\RepeatedField  $var
     *
     * @return $this
     */
    public function setChild($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Nuwave\Lighthouse\Tracing\FederatedTracing\Proto\Trace\Node::class);
        $this->child = $arr;

        return $this;
    }

    /** @return string */
    public function getId()
    {
        return $this->whichOneof('id');
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Node::class, \Nuwave\Lighthouse\Tracing\FederatedTracing\Proto\Trace_Node::class);

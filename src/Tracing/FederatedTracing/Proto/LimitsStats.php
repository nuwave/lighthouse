<?php declare(strict_types=1);
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: src/Tracing/FederatedTracing/reports.proto

namespace Nuwave\Lighthouse\Tracing\FederatedTracing\Proto;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\GPBUtil;

/**
 *  Stats on the query that can be populated by the gateway or router.
 *
 * Generated from protobuf message <code>LimitsStats</code>
 */
class LimitsStats extends \Google\Protobuf\Internal\Message
{
    /**
     * The strategy used in cost calculations.
     *
     * Generated from protobuf field <code>string strategy = 1 [json_name = "strategy"];</code>
     */
    protected $strategy = '';

    /**
     * The estimated cost as calculated via the strategy specified in stats context
     * The reason that this is a histogram rather than fixed cost is that it can be affected by paging variables.
     *
     * Generated from protobuf field <code>repeated sint64 cost_estimated = 2 [json_name = "costEstimated"];</code>
     */
    private $cost_estimated;

    /**
     * The maximum estimated cost of the query.
     *
     * Generated from protobuf field <code>uint64 max_cost_estimated = 3 [json_name = "maxCostEstimated"];</code>
     */
    protected $max_cost_estimated = 0;

    /**
     * The actual cost using the strategy specified in stats context.
     *
     * Generated from protobuf field <code>repeated sint64 cost_actual = 4 [json_name = "costActual"];</code>
     */
    private $cost_actual;

    /**
     * The maximum estimated cost of the query.
     *
     * Generated from protobuf field <code>uint64 max_cost_actual = 5 [json_name = "maxCostActual"];</code>
     */
    protected $max_cost_actual = 0;

    /**
     * The total depth of the query.
     *
     * Generated from protobuf field <code>uint64 depth = 6 [json_name = "depth"];</code>
     */
    protected $depth = 0;

    /**
     * The height of the query.
     *
     * Generated from protobuf field <code>uint64 height = 7 [json_name = "height"];</code>
     */
    protected $height = 0;

    /**
     * The number of aliases in the query.
     *
     * Generated from protobuf field <code>uint64 alias_count = 8 [json_name = "aliasCount"];</code>
     */
    protected $alias_count = 0;

    /**
     * The number of root fields in the query.
     *
     * Generated from protobuf field <code>uint64 root_field_count = 9 [json_name = "rootFieldCount"];</code>
     */
    protected $root_field_count = 0;

    /**
     * Constructor.
     *
     * @param  array  $data {
     *     Optional. Data for populating the Message object.
     *
     *     @var string $strategy
     *           The strategy used in cost calculations
     *     @var array<int>|array<string>|\Google\Protobuf\Internal\RepeatedField $cost_estimated
     *           The estimated cost as calculated via the strategy specified in stats context
     *           The reason that this is a histogram rather than fixed cost is that it can be affected by paging variables
     *     @var int|string $max_cost_estimated
     *           The maximum estimated cost of the query
     *     @var array<int>|array<string>|\Google\Protobuf\Internal\RepeatedField $cost_actual
     *           The actual cost using the strategy specified in stats context
     *     @var int|string $max_cost_actual
     *           The maximum estimated cost of the query
     *     @var int|string $depth
     *           The total depth of the query
     *     @var int|string $height
     *           The height of the query
     *     @var int|string $alias_count
     *           The number of aliases in the query
     *     @var int|string $root_field_count
     *           The number of root fields in the query
     * }
     */
    public function __construct($data = null)
    {
        Metadata\Reports::initOnce();
        parent::__construct($data);
    }

    /**
     * The strategy used in cost calculations.
     *
     * Generated from protobuf field <code>string strategy = 1 [json_name = "strategy"];</code>
     *
     * @return string
     */
    public function getStrategy()
    {
        return $this->strategy;
    }

    /**
     * The strategy used in cost calculations.
     *
     * Generated from protobuf field <code>string strategy = 1 [json_name = "strategy"];</code>
     *
     * @param  string  $var
     *
     * @return $this
     */
    public function setStrategy($var)
    {
        GPBUtil::checkString($var, true);
        $this->strategy = $var;

        return $this;
    }

    /**
     * The estimated cost as calculated via the strategy specified in stats context
     * The reason that this is a histogram rather than fixed cost is that it can be affected by paging variables.
     *
     * Generated from protobuf field <code>repeated sint64 cost_estimated = 2 [json_name = "costEstimated"];</code>
     *
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getCostEstimated()
    {
        return $this->cost_estimated;
    }

    /**
     * The estimated cost as calculated via the strategy specified in stats context
     * The reason that this is a histogram rather than fixed cost is that it can be affected by paging variables.
     *
     * Generated from protobuf field <code>repeated sint64 cost_estimated = 2 [json_name = "costEstimated"];</code>
     *
     * @param  array<int>|array<string>|\Google\Protobuf\Internal\RepeatedField  $var
     *
     * @return $this
     */
    public function setCostEstimated($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, GPBType::SINT64);
        $this->cost_estimated = $arr;

        return $this;
    }

    /**
     * The maximum estimated cost of the query.
     *
     * Generated from protobuf field <code>uint64 max_cost_estimated = 3 [json_name = "maxCostEstimated"];</code>
     *
     * @return int|string
     */
    public function getMaxCostEstimated()
    {
        return $this->max_cost_estimated;
    }

    /**
     * The maximum estimated cost of the query.
     *
     * Generated from protobuf field <code>uint64 max_cost_estimated = 3 [json_name = "maxCostEstimated"];</code>
     *
     * @param  int|string  $var
     *
     * @return $this
     */
    public function setMaxCostEstimated($var)
    {
        GPBUtil::checkUint64($var);
        $this->max_cost_estimated = $var;

        return $this;
    }

    /**
     * The actual cost using the strategy specified in stats context.
     *
     * Generated from protobuf field <code>repeated sint64 cost_actual = 4 [json_name = "costActual"];</code>
     *
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getCostActual()
    {
        return $this->cost_actual;
    }

    /**
     * The actual cost using the strategy specified in stats context.
     *
     * Generated from protobuf field <code>repeated sint64 cost_actual = 4 [json_name = "costActual"];</code>
     *
     * @param  array<int>|array<string>|\Google\Protobuf\Internal\RepeatedField  $var
     *
     * @return $this
     */
    public function setCostActual($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, GPBType::SINT64);
        $this->cost_actual = $arr;

        return $this;
    }

    /**
     * The maximum estimated cost of the query.
     *
     * Generated from protobuf field <code>uint64 max_cost_actual = 5 [json_name = "maxCostActual"];</code>
     *
     * @return int|string
     */
    public function getMaxCostActual()
    {
        return $this->max_cost_actual;
    }

    /**
     * The maximum estimated cost of the query.
     *
     * Generated from protobuf field <code>uint64 max_cost_actual = 5 [json_name = "maxCostActual"];</code>
     *
     * @param  int|string  $var
     *
     * @return $this
     */
    public function setMaxCostActual($var)
    {
        GPBUtil::checkUint64($var);
        $this->max_cost_actual = $var;

        return $this;
    }

    /**
     * The total depth of the query.
     *
     * Generated from protobuf field <code>uint64 depth = 6 [json_name = "depth"];</code>
     *
     * @return int|string
     */
    public function getDepth()
    {
        return $this->depth;
    }

    /**
     * The total depth of the query.
     *
     * Generated from protobuf field <code>uint64 depth = 6 [json_name = "depth"];</code>
     *
     * @param  int|string  $var
     *
     * @return $this
     */
    public function setDepth($var)
    {
        GPBUtil::checkUint64($var);
        $this->depth = $var;

        return $this;
    }

    /**
     * The height of the query.
     *
     * Generated from protobuf field <code>uint64 height = 7 [json_name = "height"];</code>
     *
     * @return int|string
     */
    public function getHeight()
    {
        return $this->height;
    }

    /**
     * The height of the query.
     *
     * Generated from protobuf field <code>uint64 height = 7 [json_name = "height"];</code>
     *
     * @param  int|string  $var
     *
     * @return $this
     */
    public function setHeight($var)
    {
        GPBUtil::checkUint64($var);
        $this->height = $var;

        return $this;
    }

    /**
     * The number of aliases in the query.
     *
     * Generated from protobuf field <code>uint64 alias_count = 8 [json_name = "aliasCount"];</code>
     *
     * @return int|string
     */
    public function getAliasCount()
    {
        return $this->alias_count;
    }

    /**
     * The number of aliases in the query.
     *
     * Generated from protobuf field <code>uint64 alias_count = 8 [json_name = "aliasCount"];</code>
     *
     * @param  int|string  $var
     *
     * @return $this
     */
    public function setAliasCount($var)
    {
        GPBUtil::checkUint64($var);
        $this->alias_count = $var;

        return $this;
    }

    /**
     * The number of root fields in the query.
     *
     * Generated from protobuf field <code>uint64 root_field_count = 9 [json_name = "rootFieldCount"];</code>
     *
     * @return int|string
     */
    public function getRootFieldCount()
    {
        return $this->root_field_count;
    }

    /**
     * The number of root fields in the query.
     *
     * Generated from protobuf field <code>uint64 root_field_count = 9 [json_name = "rootFieldCount"];</code>
     *
     * @param  int|string  $var
     *
     * @return $this
     */
    public function setRootFieldCount($var)
    {
        GPBUtil::checkUint64($var);
        $this->root_field_count = $var;

        return $this;
    }
}

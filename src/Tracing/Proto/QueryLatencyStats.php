<?php declare(strict_types=1);
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: src/Tracing/reports.proto

namespace Nuwave\Lighthouse\Tracing\Proto;

use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>QueryLatencyStats</code>.
 */
class QueryLatencyStats extends \Google\Protobuf\Internal\Message
{
    /** Generated from protobuf field <code>repeated sint64 latency_count = 13;</code> */
    private $latency_count;

    /** Generated from protobuf field <code>uint64 request_count = 2;</code> */
    protected $request_count = 0;

    /** Generated from protobuf field <code>uint64 cache_hits = 3;</code> */
    protected $cache_hits = 0;

    /** Generated from protobuf field <code>uint64 persisted_query_hits = 4;</code> */
    protected $persisted_query_hits = 0;

    /** Generated from protobuf field <code>uint64 persisted_query_misses = 5;</code> */
    protected $persisted_query_misses = 0;

    /** Generated from protobuf field <code>repeated sint64 cache_latency_count = 14;</code> */
    private $cache_latency_count;

    /** Generated from protobuf field <code>.PathErrorStats root_error_stats = 7;</code> */
    protected ?\Nuwave\Lighthouse\Tracing\Proto\PathErrorStats $root_error_stats = null;

    /** Generated from protobuf field <code>uint64 requests_with_errors_count = 8;</code> */
    protected $requests_with_errors_count = 0;

    /** Generated from protobuf field <code>repeated sint64 public_cache_ttl_count = 15;</code> */
    private $public_cache_ttl_count;

    /** Generated from protobuf field <code>repeated sint64 private_cache_ttl_count = 16;</code> */
    private $private_cache_ttl_count;

    /** Generated from protobuf field <code>uint64 registered_operation_count = 11;</code> */
    protected $registered_operation_count = 0;

    /** Generated from protobuf field <code>uint64 forbidden_operation_count = 12;</code> */
    protected $forbidden_operation_count = 0;

    /**
     * The number of requests that were executed without field-level
     * instrumentation (and thus do not contribute to `observed_execution_count`
     * fields on this message's cousin-twice-removed FieldStats).
     *
     * Generated from protobuf field <code>uint64 requests_without_field_instrumentation = 17;</code>
     */
    protected $requests_without_field_instrumentation = 0;

    /**
     * Constructor.
     *
     * @param  array  $data {
     *     Optional. Data for populating the Message object.
     *
     *     @var array<int>|array<string>|\Google\Protobuf\Internal\RepeatedField $latency_count
     *     @var int|string $request_count
     *     @var int|string $cache_hits
     *     @var int|string $persisted_query_hits
     *     @var int|string $persisted_query_misses
     *     @var array<int>|array<string>|\Google\Protobuf\Internal\RepeatedField $cache_latency_count
     *     @var \Nuwave\Lighthouse\Tracing\Proto\PathErrorStats $root_error_stats
     *     @var int|string $requests_with_errors_count
     *     @var array<int>|array<string>|\Google\Protobuf\Internal\RepeatedField $public_cache_ttl_count
     *     @var array<int>|array<string>|\Google\Protobuf\Internal\RepeatedField $private_cache_ttl_count
     *     @var int|string $registered_operation_count
     *     @var int|string $forbidden_operation_count
     *     @var int|string $requests_without_field_instrumentation
     *           The number of requests that were executed without field-level
     *           instrumentation (and thus do not contribute to `observed_execution_count`
     *           fields on this message's cousin-twice-removed FieldStats).
     * }
     */
    public function __construct($data = null)
    {
        \Nuwave\Lighthouse\Tracing\Proto\Metadata\Reports::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>repeated sint64 latency_count = 13;</code>.
     *
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getLatencyCount()
    {
        return $this->latency_count;
    }

    /**
     * Generated from protobuf field <code>repeated sint64 latency_count = 13;</code>.
     *
     * @param  array<int>|array<string>|\Google\Protobuf\Internal\RepeatedField  $var
     *
     * @return $this
     */
    public function setLatencyCount(array|\Google\Protobuf\Internal\RepeatedField $var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::SINT64);
        $this->latency_count = $arr;

        return $this;
    }

    /** Generated from protobuf field <code>uint64 request_count = 2;</code> */
    public function getRequestCount(): int|string
    {
        return $this->request_count;
    }

    /**
     * Generated from protobuf field <code>uint64 request_count = 2;</code>.
     *
     * @return $this
     */
    public function setRequestCount(int|string $var)
    {
        GPBUtil::checkUint64($var);
        $this->request_count = $var;

        return $this;
    }

    /** Generated from protobuf field <code>uint64 cache_hits = 3;</code> */
    public function getCacheHits(): int|string
    {
        return $this->cache_hits;
    }

    /**
     * Generated from protobuf field <code>uint64 cache_hits = 3;</code>.
     *
     * @return $this
     */
    public function setCacheHits(int|string $var)
    {
        GPBUtil::checkUint64($var);
        $this->cache_hits = $var;

        return $this;
    }

    /** Generated from protobuf field <code>uint64 persisted_query_hits = 4;</code> */
    public function getPersistedQueryHits(): int|string
    {
        return $this->persisted_query_hits;
    }

    /**
     * Generated from protobuf field <code>uint64 persisted_query_hits = 4;</code>.
     *
     * @return $this
     */
    public function setPersistedQueryHits(int|string $var)
    {
        GPBUtil::checkUint64($var);
        $this->persisted_query_hits = $var;

        return $this;
    }

    /** Generated from protobuf field <code>uint64 persisted_query_misses = 5;</code> */
    public function getPersistedQueryMisses(): int|string
    {
        return $this->persisted_query_misses;
    }

    /**
     * Generated from protobuf field <code>uint64 persisted_query_misses = 5;</code>.
     *
     * @return $this
     */
    public function setPersistedQueryMisses(int|string $var)
    {
        GPBUtil::checkUint64($var);
        $this->persisted_query_misses = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>repeated sint64 cache_latency_count = 14;</code>.
     *
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getCacheLatencyCount()
    {
        return $this->cache_latency_count;
    }

    /**
     * Generated from protobuf field <code>repeated sint64 cache_latency_count = 14;</code>.
     *
     * @param  array<int>|array<string>|\Google\Protobuf\Internal\RepeatedField  $var
     *
     * @return $this
     */
    public function setCacheLatencyCount(array|\Google\Protobuf\Internal\RepeatedField $var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::SINT64);
        $this->cache_latency_count = $arr;

        return $this;
    }

    /** Generated from protobuf field <code>.PathErrorStats root_error_stats = 7;</code> */
    public function getRootErrorStats(): ?PathErrorStats
    {
        return $this->root_error_stats;
    }

    public function hasRootErrorStats()
    {
        return isset($this->root_error_stats);
    }

    public function clearRootErrorStats(): void
    {
        unset($this->root_error_stats);
    }

    /**
     * Generated from protobuf field <code>.PathErrorStats root_error_stats = 7;</code>.
     *
     * @param  \Nuwave\Lighthouse\Tracing\Proto\PathErrorStats  $var
     *
     * @return $this
     */
    public function setRootErrorStats($var)
    {
        GPBUtil::checkMessage($var, \Nuwave\Lighthouse\Tracing\Proto\PathErrorStats::class);
        $this->root_error_stats = $var;

        return $this;
    }

    /** Generated from protobuf field <code>uint64 requests_with_errors_count = 8;</code> */
    public function getRequestsWithErrorsCount(): int|string
    {
        return $this->requests_with_errors_count;
    }

    /**
     * Generated from protobuf field <code>uint64 requests_with_errors_count = 8;</code>.
     *
     * @return $this
     */
    public function setRequestsWithErrorsCount(int|string $var)
    {
        GPBUtil::checkUint64($var);
        $this->requests_with_errors_count = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>repeated sint64 public_cache_ttl_count = 15;</code>.
     *
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getPublicCacheTtlCount()
    {
        return $this->public_cache_ttl_count;
    }

    /**
     * Generated from protobuf field <code>repeated sint64 public_cache_ttl_count = 15;</code>.
     *
     * @param  array<int>|array<string>|\Google\Protobuf\Internal\RepeatedField  $var
     *
     * @return $this
     */
    public function setPublicCacheTtlCount(array|\Google\Protobuf\Internal\RepeatedField $var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::SINT64);
        $this->public_cache_ttl_count = $arr;

        return $this;
    }

    /**
     * Generated from protobuf field <code>repeated sint64 private_cache_ttl_count = 16;</code>.
     *
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getPrivateCacheTtlCount()
    {
        return $this->private_cache_ttl_count;
    }

    /**
     * Generated from protobuf field <code>repeated sint64 private_cache_ttl_count = 16;</code>.
     *
     * @param  array<int>|array<string>|\Google\Protobuf\Internal\RepeatedField  $var
     *
     * @return $this
     */
    public function setPrivateCacheTtlCount(array|\Google\Protobuf\Internal\RepeatedField $var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::SINT64);
        $this->private_cache_ttl_count = $arr;

        return $this;
    }

    /** Generated from protobuf field <code>uint64 registered_operation_count = 11;</code> */
    public function getRegisteredOperationCount(): int|string
    {
        return $this->registered_operation_count;
    }

    /**
     * Generated from protobuf field <code>uint64 registered_operation_count = 11;</code>.
     *
     * @return $this
     */
    public function setRegisteredOperationCount(int|string $var)
    {
        GPBUtil::checkUint64($var);
        $this->registered_operation_count = $var;

        return $this;
    }

    /** Generated from protobuf field <code>uint64 forbidden_operation_count = 12;</code> */
    public function getForbiddenOperationCount(): int|string
    {
        return $this->forbidden_operation_count;
    }

    /**
     * Generated from protobuf field <code>uint64 forbidden_operation_count = 12;</code>.
     *
     * @return $this
     */
    public function setForbiddenOperationCount(int|string $var)
    {
        GPBUtil::checkUint64($var);
        $this->forbidden_operation_count = $var;

        return $this;
    }

    /**
     * The number of requests that were executed without field-level
     * instrumentation (and thus do not contribute to `observed_execution_count`
     * fields on this message's cousin-twice-removed FieldStats).
     *
     * Generated from protobuf field <code>uint64 requests_without_field_instrumentation = 17;</code>
     */
    public function getRequestsWithoutFieldInstrumentation(): int|string
    {
        return $this->requests_without_field_instrumentation;
    }

    /**
     * The number of requests that were executed without field-level
     * instrumentation (and thus do not contribute to `observed_execution_count`
     * fields on this message's cousin-twice-removed FieldStats).
     *
     * Generated from protobuf field <code>uint64 requests_without_field_instrumentation = 17;</code>
     *
     * @return $this
     */
    public function setRequestsWithoutFieldInstrumentation(int|string $var)
    {
        GPBUtil::checkUint64($var);
        $this->requests_without_field_instrumentation = $var;

        return $this;
    }
}

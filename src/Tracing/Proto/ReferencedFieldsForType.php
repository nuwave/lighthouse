<?php declare(strict_types=1);
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: src/Tracing/reports.proto

namespace Nuwave\Lighthouse\Tracing\Proto;

use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>ReferencedFieldsForType</code>.
 */
class ReferencedFieldsForType extends \Google\Protobuf\Internal\Message
{
    /**
     * Contains (eg) "email" for User.email:String!
     *
     * Generated from protobuf field <code>repeated string field_names = 1;</code>
     */
    private $field_names;

    /**
     * True if this type is an interface.
     *
     * Generated from protobuf field <code>bool is_interface = 2;</code>
     */
    protected $is_interface = false;

    /**
     * Constructor.
     *
     * @param  array  $data {
     *     Optional. Data for populating the Message object.
     *
     *     @var array<string>|\Google\Protobuf\Internal\RepeatedField $field_names
     *           Contains (eg) "email" for User.email:String!
     *     @var bool $is_interface
     *           True if this type is an interface.
     * }
     */
    public function __construct($data = null)
    {
        \Nuwave\Lighthouse\Tracing\Proto\Metadata\Reports::initOnce();
        parent::__construct($data);
    }

    /**
     * Contains (eg) "email" for User.email:String!
     *
     * Generated from protobuf field <code>repeated string field_names = 1;</code>
     *
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getFieldNames()
    {
        return $this->field_names;
    }

    /**
     * Contains (eg) "email" for User.email:String!
     *
     * Generated from protobuf field <code>repeated string field_names = 1;</code>
     *
     * @param  array<string>|\Google\Protobuf\Internal\RepeatedField  $var
     *
     * @return $this
     */
    public function setFieldNames(array|\Google\Protobuf\Internal\RepeatedField $var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->field_names = $arr;

        return $this;
    }

    /**
     * True if this type is an interface.
     *
     * Generated from protobuf field <code>bool is_interface = 2;</code>
     *
     * @return bool
     */
    public function getIsInterface()
    {
        return $this->is_interface;
    }

    /**
     * True if this type is an interface.
     *
     * Generated from protobuf field <code>bool is_interface = 2;</code>
     *
     * @param  bool  $var
     *
     * @return $this
     */
    public function setIsInterface($var)
    {
        GPBUtil::checkBool($var);
        $this->is_interface = $var;

        return $this;
    }
}

<?php declare(strict_types=1);
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: src/Tracing/reports.proto

namespace Nuwave\Lighthouse\Tracing\Proto;

use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>ContextualizedStats</code>.
 */
class ContextualizedStats extends \Google\Protobuf\Internal\Message
{
    /** Generated from protobuf field <code>.StatsContext context = 1;</code> */
    protected $context;

    /** Generated from protobuf field <code>.QueryLatencyStats query_latency_stats = 2;</code> */
    protected $query_latency_stats;

    /**
     * Key is type name. This structure provides data for the count and latency of individual
     * field executions and thus only reflects operations for which field-level tracing occurred.
     *
     * Generated from protobuf field <code>map<string, .TypeStat> per_type_stat = 3;</code>
     */
    private $per_type_stat;

    /**
     * Constructor.
     *
     * @param  array  $data {
     *     Optional. Data for populating the Message object.
     *
     *     @var \Nuwave\Lighthouse\Tracing\Proto\StatsContext $context
     *     @var \Nuwave\Lighthouse\Tracing\Proto\QueryLatencyStats $query_latency_stats
     *     @var array|\Google\Protobuf\Internal\MapField $per_type_stat
     *           Key is type name. This structure provides data for the count and latency of individual
     *           field executions and thus only reflects operations for which field-level tracing occurred.
     * }
     */
    public function __construct($data = null)
    {
        \Nuwave\Lighthouse\Tracing\Proto\Metadata\Reports::initOnce();
        parent::__construct($data);
    }

    /** Generated from protobuf field <code>.StatsContext context = 1;</code> */
    public function getContext(): ?StatsContext
    {
        return $this->context;
    }

    public function hasContext()
    {
        return isset($this->context);
    }

    public function clearContext(): void
    {
        unset($this->context);
    }

    /**
     * Generated from protobuf field <code>.StatsContext context = 1;</code>.
     *
     * @param  \Nuwave\Lighthouse\Tracing\Proto\StatsContext  $var
     *
     * @return $this
     */
    public function setContext($var)
    {
        GPBUtil::checkMessage($var, \Nuwave\Lighthouse\Tracing\Proto\StatsContext::class);
        $this->context = $var;

        return $this;
    }

    /** Generated from protobuf field <code>.QueryLatencyStats query_latency_stats = 2;</code> */
    public function getQueryLatencyStats(): ?QueryLatencyStats
    {
        return $this->query_latency_stats;
    }

    public function hasQueryLatencyStats()
    {
        return isset($this->query_latency_stats);
    }

    public function clearQueryLatencyStats(): void
    {
        unset($this->query_latency_stats);
    }

    /**
     * Generated from protobuf field <code>.QueryLatencyStats query_latency_stats = 2;</code>.
     *
     * @param  \Nuwave\Lighthouse\Tracing\Proto\QueryLatencyStats  $var
     *
     * @return $this
     */
    public function setQueryLatencyStats($var)
    {
        GPBUtil::checkMessage($var, \Nuwave\Lighthouse\Tracing\Proto\QueryLatencyStats::class);
        $this->query_latency_stats = $var;

        return $this;
    }

    /**
     * Key is type name. This structure provides data for the count and latency of individual
     * field executions and thus only reflects operations for which field-level tracing occurred.
     *
     * Generated from protobuf field <code>map<string, .TypeStat> per_type_stat = 3;</code>
     *
     * @return \Google\Protobuf\Internal\MapField
     */
    public function getPerTypeStat()
    {
        return $this->per_type_stat;
    }

    /**
     * Key is type name. This structure provides data for the count and latency of individual
     * field executions and thus only reflects operations for which field-level tracing occurred.
     *
     * Generated from protobuf field <code>map<string, .TypeStat> per_type_stat = 3;</code>
     *
     * @return $this
     */
    public function setPerTypeStat(array|\Google\Protobuf\Internal\MapField $var)
    {
        $arr = GPBUtil::checkMapField($var, \Google\Protobuf\Internal\GPBType::STRING, \Google\Protobuf\Internal\GPBType::MESSAGE, \Nuwave\Lighthouse\Tracing\Proto\TypeStat::class);
        $this->per_type_stat = $arr;

        return $this;
    }
}
